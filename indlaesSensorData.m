function tableout = indlaesSensorData(workbookFile,sheetName,startRow,endRow)
%Funktionen indlaesSensorData importerer data fra en excelfil(workbookFile), og gemmer dette i en struct kaldet tableout. 
%WorkbookFile er SensorData-filen og SensorDataSammenlign-filen. Denne sikrer, at alle værdierne gemmes i den rette type.
%   INPUT
%   workbookFile = Filen der skal indlæses data fra 
%   OUTPUT
%   tableout = tabel af data gemt i et struct. 
%IMPORTFILE1 Import data from a spreadsheet
%   DATA = IMPORTFILE1(FILE) reads data from the first worksheet in the
%   Microsoft Excel spreadsheet file named FILE and returns the data as a
%   table.
%
%   DATA = IMPORTFILE1(FILE,SHEET) reads from the specified worksheet.
%
%   DATA = IMPORTFILE1(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.%
% Example:
%   SensorDataFil = importfile1('SensorDataFil.xlsx','Ark1',2,14);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2018/11/08 09:08:47

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 1600;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw, dates] = xlsread(workbookFile, sheetName, sprintf('A%d:Q%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
for block=2:length(startRow)
    [~, ~, tmpRawBlock,tmpDateNumBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:Q%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock]; %#ok<AGROW>
end
stringVectors = string(raw(:,[2,8,9,10,11,12,14]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,4,5,6,7,13,15,16,17]);
dates = dates(:,3);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Create table
tableout = table;

%% Allocate imported array to column variable names
tableout.ID = data(:,1);
tableout.Velfaerdsteknologi = cellstr(stringVectors(:,1));
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
tableout.Tidspunkt = datetime([dates{:,1}].', 'ConvertFrom', 'Excel');
tableout.Omsorgsfunktion = data(:,2);
tableout.Komfortfunktion = data(:,3);
tableout.Haevesaenkefunktion = data(:,4);
tableout.LunaMedCarendo = data(:,5);
tableout.Varighedforarbejdsgang = cellstr(stringVectors(:,2));
tableout.Varighedm2medarbejdere = cellstr(stringVectors(:,3));
tableout.Varighedm1medarbejder = cellstr(stringVectors(:,4));
tableout.Varighedm0medarbejder = cellstr(stringVectors(:,5));
tableout.Arbejdsgang = cellstr(stringVectors(:,6));
tableout.Medarbejdere = data(:,6);
tableout.Tidmedborger = cellstr(stringVectors(:,7));
tableout.Superbruger = data(:,7);
tableout.Almindeligtpersonale = data(:,8);
tableout.Afloeser = data(:,9);

tableout.Varighedforarbejdsgang  = datetime(tableout.Varighedforarbejdsgang(:),'InputFormat','mm.ss');
tableout.Varighedforarbejdsgang.Format = 'mm:ss';
tableout.Varighedforarbejdsgang  = cellstr(tableout.Varighedforarbejdsgang);

tableout.Varighedm2medarbejdere  = datetime(tableout.Varighedm2medarbejdere(:),'InputFormat','mm.ss');
tableout.Varighedm2medarbejdere.Format = 'mm:ss';
tableout.Varighedm2medarbejdere  = cellstr(tableout.Varighedm2medarbejdere);

tableout.Varighedm1medarbejder  = datetime(tableout.Varighedm1medarbejder(:),'InputFormat','mm.ss');
tableout.Varighedm1medarbejder.Format = 'mm:ss';
tableout.Varighedm1medarbejder  = cellstr(tableout.Varighedm1medarbejder);

tableout.Varighedm0medarbejder  = datetime(tableout.Varighedm0medarbejder(:),'InputFormat','mm.ss');
tableout.Varighedm0medarbejder.Format = 'mm:ss';
tableout.Varighedm0medarbejder  = cellstr(tableout.Varighedm0medarbejder);

tableout.Tidmedborger = datetime(tableout.Tidmedborger(:),'InputFormat','mm.ss');
tableout.Tidmedborger.Format = 'mm:ss';
tableout.Tidmedborger  = cellstr(tableout.Tidmedborger);
% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% tableout.Tidspunkt=datenum(tableout.Tidspunkt);

